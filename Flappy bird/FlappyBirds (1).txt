/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package flappy.birds;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.text.AttributedCharacterIterator;
import java.util.Map;
import javax.imageio.ImageIO;
import pkg2dgamesframework.AFrameOnImage;
import pkg2dgamesframework.Animation;
import pkg2dgamesframework.GameScreen;

/**
 *
 * @author tainguyen
 */
public class FlappyBirds extends GameScreen{
    private BufferedImage birds;
    private Animation birds_anim;
    public static float g = 0.15f;
    private Bird bird;
    private Ground ground;
    private ChimneyGroup chimneyGroup ;
    private int Point = 0;
    private int BEGIN_SCREEN = 0;
    private int GAMEPLAY_SCREEN = 1;
    private int GAMEOVER_SCREEN = 2;
    
    private int CurrentScreen = BEGIN_SCREEN;
    
    public FlappyBirds(){
        super(800,600);
        try {
            birds = ImageIO.read(new File("Assets/bird_sprite.png"));      
        } catch (IOException ex) {}
            birds_anim = new Animation(70);
            AFrameOnImage f;
            f = new AFrameOnImage(0, 0, 60, 60);
            birds_anim.AddFrame(f);
            f = new AFrameOnImage(60, 0, 60, 60);
            birds_anim.AddFrame(f);
            f = new AFrameOnImage(120, 0, 60, 60);
            birds_anim.AddFrame(f);
            f = new AFrameOnImage(60, 0, 60, 60);
            birds_anim.AddFrame(f);
        
            bird = new Bird(350, 250, 50, 50);
            ground = new Ground();
            
            chimneyGroup = new ChimneyGroup();
            
        BeginGame();
    }

   
    public static void main(String[] args) {
       new FlappyBirds();
    }
    
    private void restGame(){
        bird.setPos(350, 250);
        bird.setVt(0);
        bird.setLive(true);
        Point = 0;
        chimneyGroup.restChimney();
    }

    @Override
    public void GAME_UPDATE(long deltaTime){
   
        if(CurrentScreen == BEGIN_SCREEN){
            restGame();
        }else if(CurrentScreen == GAMEPLAY_SCREEN){
            if(bird.getLive()) birds_anim.Update_Me(deltaTime);
            bird.update(deltaTime);
            ground.Update();
            
            chimneyGroup.update();
            
            for(int i = 0;i<chimneyGroup.SIZE;i++){
                if(bird.getRect().intersects(chimneyGroup.getChimney(i).getRect())){
                   if(bird.getLive()) bird.bupSound.play();
                   bird.setLive(false);                  
                System.out.println("Set live = false");
                }
            }
            
            for(int i = 0;i<chimneyGroup.SIZE;i++){
                if(bird.getPosX() > chimneyGroup.getChimney(i).getPosX()&& !chimneyGroup.getChimney(i).getIsBehindBird()&& i%2 == 0){
                    Point ++;
                     bird.PointSound.play();
                    chimneyGroup.getChimney(i).setIsBehindBird(true);
            }
            }
            if(bird.getPosY() + bird.getH() > ground.getYground()) CurrentScreen = GAMEOVER_SCREEN;
            
                   
        }else{
            
        }
        
        
    }

    @Override
    public void GAME_PAINT(Graphics2D g2) {
        
        g2.setColor(Color.decode("#b8daef"));
        g2.fillRect(0, 0, MASTER_WIDTH, MASTER_HEIGHT);
       
        chimneyGroup.paint(g2);
        
        ground.Paint(g2);
               
        if(bird.getIsFlying())
            birds_anim.PaintAnims((int)bird.getPosX(), (int)bird.getPosY(), birds, g2, 0, -1);
        else
            birds_anim.PaintAnims((int)bird.getPosX(), (int)bird.getPosY(), birds, g2, 0, 0);
        
       
        
        if(CurrentScreen == BEGIN_SCREEN){
            g2.setColor(Color.red);
            g2.setFont((new Font("Times New Roman",1,30)));
            g2.drawString("ẤN ĐỂ CHƠI", 150, 300);
            g2.setFont((new Font("Times New Roman",1,30)));
           
        }
        if(CurrentScreen == GAMEOVER_SCREEN){
            g2.setColor(Color.red);
            g2.setFont((new Font("Times New Roman",1,30)));
            g2.drawString("ẤN ĐỂ THỬ LẠI", 200, 300);
            g2.setFont((new Font("Times New Roman",1,30)));
            g2.drawString("Điểm cao nhất: "+Point, 200, 350);          
        }
        g2.setColor(Color.red);
        g2.setFont((new Font("Times New Roman",1,30)));
        g2.drawString("Point: "+Point, 20, 50);       
    }

    @Override
    public void KEY_ACTION(KeyEvent e, int Event) {
        if(Event == KEY_PRESSED){
            
            if(CurrentScreen == BEGIN_SCREEN){
               
                CurrentScreen = GAMEPLAY_SCREEN;
                
            }else if(CurrentScreen == GAMEPLAY_SCREEN){
                if(bird.getLive()) bird.fly();
            }else if(CurrentScreen == GAMEOVER_SCREEN){
                CurrentScreen = BEGIN_SCREEN;
            }    
                                   
        }
    }
    
}
